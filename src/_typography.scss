////
/// A bunch of typography related mixins to support vertical rhythm, originally ported from [Compass](http://compass-style.org/) when I started to use [LibSass](http://libsass.org/). Depends on [Bourbon's modular scale](http://bourbon.io/docs/#modular-scale).
///
/// @group 3.typography
////

/// Base font size
///
/// @type Size
$em-size: 18px !default;

/// Base line height
///
/// @type Size
$base-line-height: 30px !default;

/// Minimum line padding
///
/// @type Bool
$min-line-padding: 2px !default;

/// Round vertical rhythm to nearest half line height
///
/// @type Bool
$round-to-nearest-half-line: true !default;

/// Browser default font size
///
/// @group _internals
/// @type Size
$browser-default-font-size: 16px !default;

/// Strip units - see [StackOverflow for details](http://stackoverflow.com/questions/12328259/how-do-you-strip-the-unit-from-any-number-in-sass).
///
/// @group _internals
///
/// @param {Size} $number
/// @return {Number}
@function strip-units($number) {
	@return $number / ($number * 0 + 1);
}

/// Calculate amount of vertical lines needed for given font-size
///
/// @author [Compass](http://compass-style.org/)
///
/// @group _internals
@function lines-for-font-size($font-size, $padding: true) {
	$lines: if($round-to-nearest-half-line,
		ceil(2 * $font-size / $base-line-height) / 2,
		ceil($font-size / $base-line-height));

	// If lines are cramped include some extra lead.
	@if ($padding) {
		@if ($lines * $base-line-height - $font-size) < ($min-line-padding * 2) {
			$lines: $lines + if($round-to-nearest-half-line, 0.5, 1);
		}
	}

	@return $lines;
}

/// Get lines in EM based on context
@function lines($lines, $from-size: 1em) {
	@return em($lines * $base-line-height) / $from-size * 1em;
}

/// Establish baseline
/// 
/// @param {Size} $font-size - Optional. In pixels.
/// @param {Bool} $relative-font-size - Optional.
@mixin establish-baseline($font-size: $em-base, $relative-font-sizing: true) {
	$relative-size: 100% * $font-size / $browser-default-font-size;
	$lines: lines-for-font-size($font-size);

	@if ($relative-font-sizing) {
		font-size: $relative-size;
		line-height: $lines * $base-line-height / $font-size;
	} @else {
		font-size: $font-size;
		line-height: $lines * $base-line-height;
	}
}

/// Adjust font size and line height to modular scale point
/// 
/// @param {Integer} $to-size - Modular scale point.
/// @param {Integer} $lines - Optional. Number of lines.
/// @param {Size} $from-size - Optional. Context font size in EMs.  
@mixin adjust-font-size-to($to-size, $lines: auto, $from-size: 1em) {
	$to-size-px: strip-units($to-size * $from-size) * $em-base;

	@if $lines == auto {
		$lines: lines-for-font-size($to-size-px);
	}
	font-size: modular-scale($to-size);
	line-height: $lines * $base-line-height / $to-size-px;
}
